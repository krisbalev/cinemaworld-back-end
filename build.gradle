plugins {
    id 'org.springframework.boot' version '2.5.4'
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
    id 'java'
    id "org.sonarqube" version "3.0"
    id 'jacoco'
}
group = 'com.example'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'
configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}
repositories {
    mavenCentral()
}
dependencies {
    implementation 'org.springframework.boot:spring-boot-starter'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    compileOnly 'org.projectlombok:lombok'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.boot:spring-boot-starter-test:2.5.5'
    implementation 'org.springframework.boot:spring-boot-starter-jdbc:2.5.5'
    runtimeOnly 'mysql:mysql-connector-java'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'com.auth0:java-jwt:3.11.0'
    implementation 'org.springframework.security:spring-security-oauth2-client'
    implementation 'org.springframework.boot:spring-boot-starter-websocket'
    testImplementation 'org.springframework.boot:spring-boot-starter-test:2.5.6'
    testImplementation 'org.springframework.security:spring-security-test:5.5.1'
    testImplementation 'org.mockito:mockito-core:4.0.0'
    implementation 'junit:junit:4.13.1'

}

test {
    useJUnitPlatform()
    finalizedBy jacocoTestReport
}
//
//tasks.withType(Test) {
//    useJUnitPlatform()
//}


jacocoTestReport {
    reports {
        xml.enabled true
//		csv.required = false
//		html.outputLocation = layout.buildDirectory.dir('jacocoHtml')
    }
}